name: Go

on:
  push:
    branches: '*'
  pull_request:
    branches: '*'

jobs:

  gofmt:
    name: No suggestions from gofmt
    runs-on: ubuntu-latest

    steps:

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '~1.17.0'

      - name: Checkout code
        uses: actions/checkout@v2

      - name: gofmt
        run: |
          gofmt_out=/tmp/gofmt.out
          git ls-files -cmoz --exclude-standard '*.go' \
            | sort -z \
            | xargs -0 gofmt -l -s -d >"$gofmt_out"
          if [ "$(wc -c "$gofmt_out" | awk '{print $1}')" -ne 0 ]; then
            cat >&2 <"$gofmt_out"
            exit 1
          fi

  golangci-lint:
    name: No errors from golangci-lint
    runs-on: ubuntu-latest

    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2

  build_test:
    name: Build and test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        go:
          - '~1.16.0'
          - '~1.17.0'

    steps:

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build
        run: go build -v ./...

      - name: Test go
        env:
          CGO_ENABLED: '0'
        run: go test -v -tags DEBUG ./...
        # Resolving on macos does not work as expected when using pure-go
        # resolver. In particular, net.LookupHost(os.Hostname()) fails with
        # `no such host'. See readme for more details on this defect.
        if: matrix.os != 'macos-latest'

      - name: Test cgo
        env:
          CGO_ENABLED: '1'
        run: go test -v -tags DEBUG ./...

      - name: Test cgo race
        env:
          CGO_ENABLED: '1'
        run: go test -v -tags DEBUG -race ./...
